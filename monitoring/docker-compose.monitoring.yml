version: '3.8'

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "${LOG_MAX_SIZE:-100M}"
    max-file: "${LOG_MAX_FILES:-7}"

x-labels: &monitoring-labels
  com.kopia.type: monitoring

x-healthcheck: &default-healthcheck
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 30s

services:
  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION:-latest}
    container_name: kopia-prometheus
    profiles:
      - prometheus
      - all
    user: "${PROM_USER:-65534}:${PROM_GROUP:-65534}"
    volumes:
      - type: bind
        source: ./prometheus/config/prometheus
        target: /etc/prometheus
        read_only: true
      - type: volume
        source: prometheus_data
        target: /prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=${PROMETHEUS_RETENTION:-15d}'
      - '--web.external-url=${PROMETHEUS_EXTERNAL_URL:-http://localhost:9090}'
      - '--storage.tsdb.wal-compression'
      - '--web.enable-lifecycle'
    ports:
      - "${PROMETHEUS_UI_PORT:-9090}:9090"
    networks:
      - monitoring_network
      - kopia_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '${PROMETHEUS_CPU_LIMIT:-1}'
          memory: ${PROMETHEUS_MEM_LIMIT:-2G}
        reservations:
          memory: 512M
    security_opt:
      - no-new-privileges:true
    logging: *default-logging
    labels:
      <<: *monitoring-labels
      com.kopia.component: prometheus
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/healthy"]

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-latest}
    container_name: kopia-grafana
    profiles:
      - prometheus
      - all
    user: "${GRAFANA_USER:-472}:${GRAFANA_GROUP:-472}"
    volumes:
      - type: bind
        source: ./prometheus/config/grafana/provisioning
        target: /etc/grafana/provisioning
        read_only: true
      - type: bind
        source: ./prometheus/dashboards
        target: /var/lib/grafana/dashboards
        read_only: true
      - type: volume
        source: grafana_data
        target: /var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_SERVER_ROOT_URL=${GRAFANA_EXTERNAL_URL:-http://localhost:3000}
      - GF_INSTALL_PLUGINS=${GRAFANA_PLUGINS:-}
      - GF_SECURITY_ADMIN_API_KEY=${GRAFANA_API_KEY:-}
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_INSTALL_PLUGINS=alexanderzobnin-zabbix-datasource
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    networks:
      - monitoring_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '${GRAFANA_CPU_LIMIT:-1}'
          memory: ${GRAFANA_MEM_LIMIT:-1G}
        reservations:
          memory: 256M
    depends_on:
      prometheus:
        condition: service_healthy
    security_opt:
      - no-new-privileges:true
    logging: *default-logging
    labels:
      <<: *monitoring-labels
      com.kopia.component: grafana
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/health"]

  kopia-exporter:
    build: 
      context: ./prometheus/exporters
      dockerfile: Dockerfile
    container_name: kopia-exporter
    profiles:
      - prometheus
      - all
    environment:
      - KOPIA_CONTAINER_NAME=${KOPIA_CONTAINER_NAME:-kopia-server}
      - KOPIA_EXPORTER_PORT=${KOPIA_EXPORTER_PORT:-9091}
      - TZ=${TZ:-UTC}
    ports:
      - "${KOPIA_EXPORTER_PORT:-9091}:9091"
    networks:
      - monitoring_network
      - kopia_network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    logging: *default-logging
    labels:
      <<: *monitoring-labels
      com.kopia.component: exporter
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9091/metrics"]

  node-exporter:
    image: prom/node-exporter:${NODE_EXPORTER_VERSION:-latest}
    container_name: kopia-node-exporter
    profiles:
      - prometheus
      - all
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "${NODE_EXPORTER_PORT:-9100}:9100"
    networks:
      - monitoring_network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    logging: *default-logging
    labels:
      <<: *monitoring-labels
      com.kopia.component: node-exporter

volumes:
  prometheus_data:
    name: ${PROMETHEUS_VOLUME_NAME:-kopia_prometheus_data}
  grafana_data:
    name: ${GRAFANA_VOLUME_NAME:-kopia_grafana_data}

networks:
  monitoring_network:
    name: ${MONITORING_NETWORK_NAME:-monitoring_network}
    driver: ${MONITORING_NETWORK_DRIVER:-bridge}
  kopia_network:
    external: true
    name: ${KOPIA_NETWORK_NAME:-kopia_network} 